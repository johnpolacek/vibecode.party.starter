{
  "name": "vibecode-party-starter",
  "version": "0.2.9",
  "license": "MIT",
  "description": "A Next.js starter template for vibecoding SaaS apps",
  "keywords": ["nextjs", "template", "starter", "vibecoding"],
  "author": "John Polacek",
  "scripts": {
    "dev": "next dev -p ${PORT:-3000}",
    "dev:db": "open -a Docker && sleep 5 && pnpm db:start && next dev --turbopack",
    "build": "pnpm generate:routes && next build",
    "start": "next start",
    "lint": "next lint",
    "go": "pnpm generate:routes && git add . && aicommits && git push origin main",
    "go:db": "pnpm db:push:prod && pnpm go",
    "test": "playwright test",
    "pw": "playwright test --ui --debug",
    "db:start": "supabase start",
    "db:stop": "supabase stop",
    "db:lint:local": "supabase db lint --db-url 'postgresql://postgres:postgres@127.0.0.1:55324/postgres' --level warning",
    "db:push:local": "supabase db push --db-url=postgresql://postgres:postgres@localhost:55324/postgres --include-all",
    "db:reset:local": "supabase db reset --db-url=postgresql://postgres:postgres@localhost:55324/postgres",
    "db:push:prod": "dotenv -e .env.production -- bash -c 'backup_file=\"backup_$(date +%Y%m%d_%H%M%S).sql\" && mkdir -p backups && echo \"üîÑ Creating backup...\" && supabase link --project-ref \"$SUPABASE_PROJECT_REF\" --password \"$SUPABASE_DB_PASSWORD\" && supabase db dump --linked -f \"backups/$backup_file\" && supabase unlink && echo \"‚úÖ Backup saved to backups/$backup_file\" && echo \"‚ö†Ô∏è Pushing changes to production...\" && supabase link --project-ref \"$SUPABASE_PROJECT_REF\" --password \"$SUPABASE_DB_PASSWORD\" && supabase db push --include-all && supabase unlink'",
    "db:diff": "supabase db diff --use-migra -f migration",
    "ship": "pnpm lint && pnpm build && (pnpm dev & sleep 10 && pnpm test && kill $!) && pnpm db:push:prod && pnpm go",
    "db:link": "supabase link",
    "db:unlink": "supabase unlink",
    "db:deploy": "echo 'üö® Remember to backup first!' && npm run db:diff && echo '‚ö†Ô∏è Review the diff above. Continue? (ctrl+c to cancel)' && read && npm run db:push && npm run db:unlink",
    "db:backup": "dotenv -- bash -c 'backup_file=\"backup_$(date +%Y%m%d_%H%M%S).sql\" && echo \"üîÑ Creating backup...\" && supabase link --project-ref \"$SUPABASE_PROJECT_REF\" --password \"$SUPABASE_DB_PASSWORD\" && supabase db dump --linked -f \"backups/$backup_file\" && supabase unlink && echo \"‚úÖ Backup saved to backups/$backup_file\"'",
    "db:restore": "dotenv -- bash -c 'echo \"‚ö†Ô∏è WARNING: This will overwrite the current database with a backup file\" && echo \"Enter the backup file name from the backups directory (e.g. backup_20240402_123456.sql):\" && read backup_file && echo \"Are you sure you want to restore from backups/$backup_file? This cannot be undone! (y/N)\" && read confirm && [[ $confirm == \"y\" ]] && supabase link --project-ref $SUPABASE_PROJECT_REF --password $SUPABASE_DB_PASSWORD && psql \"postgresql://postgres:$SUPABASE_DB_PASSWORD@db.$SUPABASE_PROJECT_REF.supabase.co:5432/postgres\" -f \"backups/$backup_file\" && supabase unlink && echo \"‚úÖ Database restored from $backup_file\"'",
    "generate:routes": "tsx scripts/generate-routes.ts",
    "db:admin": "supabase status | grep 'Studio URL' | awk '{print $3}' | xargs open"
  },
  "dependencies": {
    "@ai-sdk/openai": "^1.3.7",
    "@ai-sdk/react": "^1.2.6",
    "@ai-sdk/replicate": "^0.2.4",
    "@aws-sdk/client-s3": "^3.782.0",
    "@aws-sdk/s3-request-presigner": "^3.782.0",
    "@clerk/backend": "^1.26.0",
    "@clerk/nextjs": "^6.13.0",
    "@heroicons/react": "^2.2.0",
    "@octokit/rest": "^21.1.1",
    "@radix-ui/react-accordion": "^1.2.3",
    "@radix-ui/react-alert-dialog": "^1.1.6",
    "@radix-ui/react-avatar": "^1.1.3",
    "@radix-ui/react-checkbox": "^1.1.4",
    "@radix-ui/react-collapsible": "^1.1.3",
    "@radix-ui/react-dialog": "^1.1.6",
    "@radix-ui/react-dropdown-menu": "^2.1.6",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.2",
    "@radix-ui/react-popover": "^1.1.6",
    "@radix-ui/react-progress": "^1.1.2",
    "@radix-ui/react-radio-group": "^1.2.3",
    "@radix-ui/react-select": "^2.1.6",
    "@radix-ui/react-separator": "^1.1.2",
    "@radix-ui/react-slot": "^1.1.2",
    "@radix-ui/react-switch": "^1.1.3",
    "@radix-ui/react-tabs": "^1.1.3",
    "@sendgrid/mail": "^8.1.4",
    "@stripe/react-stripe-js": "^3.6.0",
    "@stripe/stripe-js": "^6.1.0",
    "@supabase/supabase-js": "^2.49.4",
    "@types/react-google-recaptcha": "^2.1.9",
    "ai": "^4.3.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "date-fns": "^4.1.0",
    "eslint-config-prettier": "^10.1.1",
    "eslint-plugin-prettier": "^5.2.6",
    "lucide-react": "^0.483.0",
    "next": "15.2.4",
    "next-themes": "^0.4.6",
    "prettier": "^3.5.3",
    "react": "^19.1.0",
    "react-day-picker": "8.10.1",
    "react-dom": "^19.1.0",
    "react-google-recaptcha": "^3.1.0",
    "react-icons": "^5.5.0",
    "react-markdown": "^10.1.0",
    "server": "link:@clerk/nextjs/server",
    "slugify": "^1.6.6",
    "sonner": "^2.0.3",
    "stripe": "^17.7.0",
    "tailwind-merge": "^3.1.0",
    "tailwindcss-animate": "^1.0.7",
    "uuid": "^11.1.0",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@playwright/test": "^1.51.1",
    "@tailwindcss/postcss": "^4.1.3",
    "@tailwindcss/typography": "^0.5.16",
    "@types/node": "^22.14.0",
    "@types/react": "^19.1.0",
    "@types/react-dom": "^19.1.1",
    "@types/uuid": "^10.0.0",
    "dotenv": "^16.4.7",
    "dotenv-cli": "^8.0.0",
    "eslint": "^9.24.0",
    "eslint-config-next": "15.2.4",
    "supabase": "^2.20.5",
    "tailwindcss": "^4.1.3",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.3",
    "typescript": "^5.8.2"
  }
}
